#!/bin/bash
# This program is free software: you can redistribute it and/or modify it under the terms
# of the GNU General Public License as published by the Free Software Foundation,
# either version 3 of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with this
# program. If not, see <https://www.gnu.org/licenses/>.
# ==============================================================================
#
# Perform dotfiles installation for any SUSE Linux
#
# If you want to install these dotfiles on any other Linux distribution. Make sure, that it
# support hyprland, and that you modify the packages, the package installer for your
# distro, and all the distro specific settings. These should be marked with 'SUSE',
# comment.

# Script wide variables
readonly NO_FORMAT="\033[0m"
readonly F_BOLD="\033[1m"
readonly C_OLIVE="\033[38;5;3m"
readonly F_DIM="\033[2m"

# You can add packages here
readonly package_list=("hyprland" "firefox" "git")

echo -e "
----------------------------------------------------------
   ${F_BOLD}${C_OLIVE}
author          Pavel Hrdina     pavel.hrdina.ml@seznam.cz
license         GPL-3.0
   ${NO_FORMAT}
----------------------------------------------------------
"
set -eo pipefail

#######################################
# A simple error function that prints
# time on failure.
# Globals:
#   None
# Arguments:
#   None
# Outputs:
#   Writes error to STDERR
#######################################
err() {
    echo -e "${F_DIM}err: [$(date +'%Y-%m-%dT%H:%M:%S%z')]: $*${NO_FORMAT}\n" >&2
}

if [ "$EUID" -ne 0 ];then
    err "Please run as root"
    exit
fi

echo -e "${F_DIM}Check operating system...${NO_FORMAT}\n" >&2

# Try using zypper to determine OS
# SUSE
if zypper -n --version; then
    echo -e "\n${F_DIM}Running openSUSE, continue...${NO_FORMAT}\n" >&2;
else
    echo -e "\n${F_DIM}Wrong distribution, modify the scrip, and then continue...${NO_FORMAT}\n" >&2 && exit
fi

echo "----------------------------------------------------------"

echo -e "${F_BOLD}STAGE ONE${NO_FORMAT}" >&2
echo -e "${F_BOLD}Make system ready for installation...${NO_FORMAT}" >&2


echo "----------------------------------------------------------"

# Test if OS is running as server
if [ "$(systemctl get-default)" == "graphical.target" ]; then
    echo -e "\n${F_DIM}Running openSUSE as desktop, continue...${NO_FORMAT}\n" >&2
else
    echo -e "\n${F_DIM}Running as server, change systemctl setting to desktop...${NO_FORMAT}\n" >&2
    systemctl isolate graphical.target
fi

# Install necessary components
# SUSE
echo -e "${F_DIM}Installing packages, continue...${NO_FORMAT}\n" >&2
if  zypper --non-interactive in "${package_list[@]}"; then
    echo -e "\n${F_DIM}Packages installed, continue...${NO_FORMAT}\n" >&2
else
    echo -e "\n${F_DIM}Zypper failed, exit${NO_FORMAT}\n" >&2
    exit 1
fi
